#!/usr/bin/env ruby
# frozen_string_literal: true

require "pathname"

OUT_OF_MEMORY_EXPECTED = %w[212971.rb 212983.rb 219293.rb 227322.rb 239195.rb 240894.rb].freeze

def expected_result?(file)
  return true if $CHILD_STATUS.success?
  return true if $CHILD_STATUS.exitstatus == 1
  return true if OUT_OF_MEMORY_EXPECTED.include?(file) && $CHILD_STATUS.termsig == 9

  false
end

pwd = Pathname.new(__FILE__).dirname
mruby = pwd.join("../ext/enterprise_script_service/mruby/bin/mruby").to_s
test_dir = pwd.join("../tests/regression")

failures = false

Dir.entries(test_dir).sort.each do |file|
  file_path = test_dir.join(file)
  next unless File.file?(file_path)

  cmd = "#{mruby} #{file_path}"
  system(cmd)

  if expected_result?(file)
    puts "#{file}: all good."
  else
    failures = true

    if $CHILD_STATUS.stopped?
      puts "#{file}: Stopped (#{$CHILD_STATUS.stopsig})"
    elsif $CHILD_STATUS.signaled?
      puts "#{file}: Signaled (#{$CHILD_STATUS.termsig})"
    elsif $CHILD_STATUS.exited?
      puts "#{file}: Exited (#{$CHILD_STATUS.exitstatus})"
    else
      puts "#{file}: unknown term signal: #{$CHILD_STATUS.methods} (#{$CHILD_STATUS})"
    end
  end
end

raise "Regression tests failed" if failures

puts
puts "Regression tests succeeded"
